events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Use the correct Kubernetes DNS server from /etc/resolv.conf
    resolver 10.43.0.10 valid=30s ipv6=off;
    resolver_timeout 5s;

    # Note: Using set variables instead of upstream block to preserve existing fix

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            # Use set variables to preserve existing DNS resolution fix
            set $backend_host backend-app.my-demo.svc.cluster.local;
            set $backend_port 8080;
            proxy_pass http://$backend_host:$backend_port/;
            
            # HTTP/1.1 with proper connection handling for Istio
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # CRITICAL: Set Host header to service FQDN for Istio mTLS routing
            proxy_set_header Host $backend_host;
            
            # Preserve original host for backend application if needed
            proxy_set_header X-Original-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Adjust timeouts for mesh communication
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /health {
            return 200 "frontend healthy\n";
            add_header Content-Type text/plain;
        }

        location /ready {
            access_log off;
            
            # Use set variables with proper Host header for mTLS
            set $backend_host backend-app.my-demo.svc.cluster.local;
            set $backend_port 8080;
            proxy_pass http://$backend_host:$backend_port/health;
            
            # HTTP/1.1 with keep-alive management
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # CRITICAL: Use service FQDN for Istio mTLS routing
            proxy_set_header Host $backend_host;
            
            # Timeouts for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Disable buffering for health checks
            proxy_buffering off;
            proxy_cache off;
            
            # Handle errors gracefully
            proxy_intercept_errors on;
            error_page 502 503 504 408 = @backend_unavailable;
        }

        location @backend_unavailable {
            add_header Content-Type application/json;
            return 503 '{"status":"not_ready","reason":"backend_unavailable","message":"Backend service backend-app is not available"}';
        }
    }
}